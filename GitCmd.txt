# GitTest
这个主要是熟悉Git命令，用来测试Git的具体操作

从GitHub上下载库代码
1.mkdir GitTest  (注意GitTest与Github上的库的名字要一样)
2.git init
3.git remote add origin https://github.com/cqtddt/GitTest.git
4.git pull origin master

提交本地的代码到Github库上
1.git add GitCmd.txt  (将文件添加到上传队列)
2.git commit -m 'test commit cmd'
3.git push origin master

修改文件提交到Github库上
1.修改README.md文件
2.git add README.md  (将文件添加到上传队列)
3.git commit -m 'test commit the modify of readme'
4.git push origin master

提交文件夹及下面的文件到Github上
1.git add Dir
2.git commit -m 'test commit the all file of dir'
3.git push origin master

提交中方有乱码问题
修改dir目录下的a.txt的格式为utf-8 无bom文件


线上的仓库下载到本地
今天我们来学习如何使用gitshell将线上的版本仓库下载到本地。
我们为什么要把线上的仓库下载到本地，通常情况下是我们想要参与别人的项目。
github上面有一个项目：https://github.com/hongyangAndroid/okhttp-utils，点击访问它。
现在我们想要参与这个项目，需要进行以下步骤：
1.访问上面的链接，点击fork按钮，
2.现在okhttp-utils项目已经添加到你的线上版本仓库中了，我们要下载它。
打开gitshell，输入 mkdir okhttp
3.cd okhttp
4.git init
5.git remote add upstream https://github.com/hongyangAndroid/okhttp-utils
6.git fetch upstream
7.git merge upstream/master
这时就把fork到的库下载到了本地了

建立版本分支
1.cd GitTest
2.git branch testbranch
3.git checkout testbranch (将testbranch分支设置为当前工作分支)
4.git add ./
5.git commit -m '创建新的分支--testbranch'
6.git remote add origin1 https://github.com/cqtddt/GitTest.git
7.git push -u origin1 testbranch(将文件上传到分支)

1、创建分支
创建分支很简单：git branch <分支名>
2、切换分支
git checkout <分支名>
该语句和上一个语句可以和起来用一个语句表示：git checkout -b <分支名>
3、分支合并
比如，如果要将开发中的分支（develop），合并到稳定分支（master），
首先切换的master分支：git checkout master。
然后执行合并操作：git merge develop。
如果有冲突，会提示你，调用git status查看冲突文件。
解决冲突，然后调用git add或git rm将解决后的文件暂存。
所有冲突解决后，git commit 提交更改。
4、分支衍合
分支衍合和分支合并的差别在于，分支衍合不会保留合并的日志，不留痕迹，而 分支合并则会保留合并的日志。
要将开发中的分支（develop），衍合到稳定分支（master）。
首先切换的master分支：git checkout master。
然后执行衍和操作：git rebase develop。
如果有冲突，会提示你，调用git status查看冲突文件。
解决冲突，然后调用git add或git rm将解决后的文件暂存。
所有冲突解决后，git rebase --continue 提交更改。
5、删除分支
执行git branch -d <分支名>
如果该分支没有合并到主分支会报错，可以用以下命令强制删除git branch -D <分支名>

查看本地是正处于那个分支
1.git branch
2.git log --graph( 会出现一个commit的图) 按q退出
3.git show-branch 可以看出分支上的递交状况
4.git branch -va  查看分支